dept,number,suffix,title,credit,gradmeth,description,prereq_text,coreq_text,rest_text,alternate_text,gened
CMSC, 106, , Introduction to C Programming, 4, Regular, Design and analysis of programs in C. An introduction to computing using structured programming concepts. Intended for students with no or minimal programming experience., MATH115, , NOCLASS[CMSC] AND NOMAJ[CMSC], CMSC106 CMSC122 INST126, 
CMSC, 122, , Introduction to Computer Programming via the Web, 3, Regular* Pass-Fail* Audit, Introduction to computer programming in the context of developing full featured dynamic web sites. Uses a problem solving approach to teach basics of program design and implementation using JavaScript; relates these skills to creation of dynamic web sites; then explores both the potential and limits of web-based information sources for use in research. Intended to help relate a student's major to these emerging technologies., , , NOCLASS[CMSC], CMSC106 CMSC122, DSSP
CMSC, 131, , Object-Oriented Programming I, 4, Regular, Introduction to programming and computer science. Emphasizes understanding and implementation of applications using object-oriented techniques. Develops skills such as program design and testing as well as implementation of programs using a graphical IDE. Programming done in Java., , MATH140, , , 
CMSC, 132, , Object-Oriented Programming II, 4, Regular, Introduction to use of computers to solve problems using software engineering principles. Design* build* test* and debug medium -size software systems and learn to use relevant tools. Use object-oriented methods to create effective and efficient problem solutions. Use and implement application programming interfaces (APIs). Programming done in Java., CMSC131 AND MATH140, , , , 
CMSC, 216, , Introduction to Computer Systems, 4, Regular, Introduction to the interaction between user programs and the operating system/hardware. Major topics include C programming* introductory systems programming* and assembly language. Other concepts covered include UNIX* machine data representation* thread management* optimization* and virtual memory. Programming is done in the Linux Environment., CMSC132 AND MATH141, CMSC250 , MAJ[CMSC] MAJ[CMPE] MIN[CMSC], , 
CMSC, 250, , Discrete Structures, 4, Regular, Fundamental mathematical concepts related to computer science* includin finite and infinite sets* relations* functions* and propositional logic. Introduction to other techniques* modeling and solving problems in computer science. Introduction to permutations* combinations* graphs* and trees with selected applications., CMSC131 AND MATH141, , MAJ[CMSC] MAJ[CMPE] MIN[CMSC] , , 
CMSC, 298, A, Special Topics in Computer Science, 1, Sat-Fail, Contact department for information to register for this course., , , , , 
CMSC, 320, , Introduction to Data Science, 3, Regular, An introduction to the data science pipeline* i.e.* the end-to-end process of going from unstructured* messy data to knowledge and actionable insights. Provides a broad overview of several topics including statistical data analysis* basic data mining and machine learning algorithms* large-scale data management* cloud computing* and information visualization., CMSC216 and CMSC250, , , , 
CMSC, 330, , Organization of Programming Languages, 3, Regular, A study of programming languages* including their syntax* semantics* and implementation. Several different models of languages are discussed* including dynamic* scripting (e.g.* Ruby* Python) functional (e.g.* OCaml* Haskell* Scheme)* and memory safe systems programming (e.g.* Rust). Explores language features such as formal syntax* scoping and binding of variables* higher-order programming* typing* and type polymorphism. Introduces finite automata* context free grammar* parsing* lambda calculus* and basics of security attacks and software security., CMSC250 AND CMSC216, , MAJ[CMSC] MAJ[CMPE] MIN[CMSC]., , 
CMSC, 351, , Algorithms, 3, Regular, A systematic study of the complexity of some elementary algorithms related to sorting* graphs and trees* and combinatorics. Algorithms are analyzed using mathematical techniques to solve recurrences and summations., CMSC250 AND CMSC216, , MAJ[CMSC] MAJ[CMPE] MIN[CMSC], CMSC251 CMSC351, 
CMSC, 389, N, Special Topics in Computer Science; Introduction to PHP and Javascript, 3, Regular, ,  CMSC250 AND CMSC216; ., , , , 
CMSC, 411, , Computer Systems Architecture, 3, Regular, Input/output processors and techniques. Intra-system communication* buses* caches. Addressing and memory hierarchies. Microprogramming* parallelism* and pipelining., CMSC330, , , ENEE446 CMSC411, 
CMSC, 412, , Operating Systems, 4, Regular, A hands-on introduction to operating systems* including topics in: multiprogramming* communication and synchronization* memory management* IO subsystems* and resource scheduling polices. The laboratory component consists of constructing a small kernel* including functions for device IO* multi-tasking* and memory management., CMSC330 AND CMSC351 AND (CMSC414 CMSC417 CMSC420 CMSC430 CMSC433 CMSC435 ENEE440 ENEE457) , , , CMSC412 ENEE447, 
CMSC, 414, , Computer and Network Security, 3, Regular, An introduction to the topic of security in the context of computer systems and networks. Identify* analyze* and solve network-related security problems in computer systems. Fundamentals of number theory* authentication* and encryption technologies* as well as the practical problems that have to be solved in order to make those technologies workable in a networked environment* particularly in the wide-area Internet environment., CMSC330 AND CMSC351; , , , CMSC414 ENEE459C ENEE457, 
CMSC, 417, , Computer Networks, 3, Regular, Computer networks and architectures. The OSI model including discussion and examples of various network layers. A general introduction to existing network protocols. Communication protocol specification* analysis* and testing., CMSC351 AND CMSC330;, , , , 
CMSC, 420, , Advanced Data Structures, 3, Regular, Description* properties* and storage allocation functions of data structures including balanced binary trees* B-Trees* hash tables* skiplists* tries* KD-Trees and Quadtrees. Algorithms for manipulating structures. Applications from areas such as String Processing* Computer Graphics* Information Retrieval* Computer Networks* Computer Vision* and Operating Systems., CMSC351 AND CMSC330;, , , , 
CMSC, 421, , Introduction to Artificial Intelligence, 3, Regular, Introduces a range of ideas and methods in AI* varying semester to semester but chosen largely from: automated heuristic search* planning* games* knowledge representation* logical and statistical inference* learning* natural language processing* vision* robotics* cognitive modeling* and intelligent agents. Programming projects will help students obtain a hands-on feel for various topics., CMSC351 AND CMSC330;, , , , 
CMSC, 422, , Introduction to Machine Learning, 3, Regular, Machine Learning studies representations and algorithms that allow machines to improve their performance on a task from experience. This is a broad overview of existing methods for machine learning and an introduction to adaptive systems in general. Emphasis is given to practical aspects of machine learning and data mining., CMSC320 AND CMSC330 AND CMSC351 AND (MATH240 MATH461), , , , 
CMSC, 423, , Bioinformatic Algorithms* Databases* and Tools, 3, Regular, An introduction to the main algorithms* databases* and tools used in bioinformatics. Topics may include assembly and analysis of genome sequences* reconstructing evolutionary histories* predicting protein structure* and clustering of biological data. Use of scripting languages to perform analysis tasks on biological data. No prior knowledge of biology is assumed., CMSC351 AND CMSC330;, , , , 
CMSC, 424, , Database Design, 3, Regular, Students are introduced to database systems and motivates the database approach as a mechanism for modeling the real world. An in-depth coverage of the relational model* logical database design* query languages* and other database concepts including query optimization* concurrency control; transaction management* and log based crash recovery. Distributed and Web database architectures are also discussed., CMSC351 AND CMSC330;, , , , 
CMSC, 425, , Game Programming, 3, Regular, An introduction to the principles and practice of computer game programming and design. This includes an introduction to game hardware and systems* the principles of game design* object and terrain modeling* game physics* artificial intelligence for games* networking for games* rendering and animation* and aural rendering. Course topics are reinforced through the design and implementation of a working computer game., CMSC420., , , , 
CMSC, 426, , Computer Vision, 3, Regular, An introduction to basic concepts and techniques in computervision. This includes low-level operations such as image filtering and edge detection* 3D reconstruction of scenes using stereo and structure from motion* and object detection* recognition and classification., CMSC330 AND CMSC351; , , , , 
CMSC, 427, , Computer Graphics, 3, Regular, An introduction to 3D computer graphics* focusing on the underlying building blocks and algorithms for applications such as 3D computer games* and augmented and virtual reality (AR/VR). Covers the basics of 3D image generation and 3D modeling* with an emphasis on interactive applications. Discusses the representation of 3D geometry* 3D transformations* projections* rasterization* basics of color spaces* texturing and lighting models* as well as programming of modern Graphics Processing Units (GPUs). Includes programming projects where students build their own 3D rendering engine step-by-step., MATH240 AND CMSC420, , , , 
CMSC, 430, , Introduction to Compilers, 3, Regular, Topics include lexical analysis* parsing* intermediate representations* program analysis* optimization* and code generation., CMSC330 AND CMSC351;, , , , 
CMSC, 433, , Programming Language Technologies and Paradigms, 3, Regular, Programming language technologies (e.g.* object-oriented programming)* their implementations and use in software design and implementation., CMSC330, , , , 
CMSC, 434, , Introduction to Human-Computer Interaction, 3, Regular, Assess usability by quantitative and qualitative methods. Conduct task analyses* usability tests* expert reviews* and continuing assessments of working products by interviews* surveys* and logging. Apply design processes and guidelines to develop professional quality user interfaces. Build low-fidelity paper mockups* and a high-fidelity prototype using contemporary tools such as graphic editors and a graphical programming environment (eg: Visual Basic* Java)., CMSC330 AND CMSC351;, , , , 
CMSC, 435, , Software Engineering, 3, Regular, State-of-the-art techniques in software design and development. Laboratory experience in applying the techniques covered. Structured design* structured programming* top-down design and development* segmentation and modularization techniques* iterative enhancement* design and code inspection techniques* correctness* and chief-programmer teams. The development of a large software project., (CMSC412 CMSC417 CMSC420 CMSC430 CMSC433), , , , 
CMSC, 436, , Programming Handheld Systems, 3, Regular, Fundamental principles and concepts that underlie the programming of handheld systems* such as mobile phones* personal digital assistants* and tablet computers. Particular emphasis will be placed on concepts such as limited display size* power* memory and CPU speed; and new input modalities* where handheld systems differ substantially from non-handheld systems* and thus require special programming tools and approaches. Students will apply these concepts and principles in the context of an existing handset programming platform., CMSC330 AND CMSC351; , , , , 
CMSC, 451, , Design and Analysis of Computer Algorithms, 3, Regular, Fundamental techniques for designing efficient computer algorithms* proving their correctness* and analyzing their complexity. General topics include graph algorithms* basic algorithm design paradigms (such as greedy algorithms* divide-and-conquer* and dynamic programming)* network flows* NP-completeness* and other selected topics in algorithms., CMSC351, , , , 
CMSC, 456, , Cryptography, 3, Regular, The theory* application* and implementation of mathematical techniques used to secure modern communications. Topics include symmetric and public-key encryption* message integrity* hash functions* block-cipher design and analysis* number theory* and digital signatures., (CMSC106 CMSC131 ENEE150) AND (CMSC330 CMSC351 ENEE324 ENEE380), , , MATH456 CMSC456 ENEE456, 
CMSC, 460, , Computational Methods, 3, Regular, Basic computational methods for interpolation* least squares* approximation* numerical quadrature* numerical solution of polynomial and transcendental equations* systems of linear equations and initial value problems for ordinary differential equations. Emphasis on methods and their computational properties rather than their analytic aspects. Intended primarily for students in the physical and engineering sciences., (MATH240 MATH341 MATH461) AND (MATH241 MATH340) AND (CMSC106 CMSC131) AND MATH246, , , AMSC460 AMSC466 CMSC460 CMSC466, 
CMSC, 466, , Introduction to Numerical Analysis I, 3, Regular, Floating point computations* direct methods for linear systems* interpolation* solution of nonlinear equations., (MATH240 MATH341 MATH461) AND (MATH241 MATH340) AND (CMSC106 CMSC131) AND MATH410, , , AMSC460 AMSC466 CMSC460 CMSC466, 
CMSC, 470, , Introduction to Natural Language Processing, 3, Regular, Introduction to fundamental techniques for automatically processing and generating natural language with computers. Machine learning techniques* models* and algorithms that enable computers to deal with the ambiguity and implicit structure of natural language. Application of these techniques in a series of assignments designed to address a core application such as question answering or machine translation., CMSC320 AND CMSC330 AND CMSC351 AND (MATH240 MATH461) , , , , 
CMSC, 475, , Combinatorics and Graph Theory, 3, Regular, General enumeration methods* difference equations* generating functions. Elements of graph theory* matrix representations of graphs* applications of graph theory to transport networks* matching theory and graphical algorithms., MATH240 and MATH241; , , , , 
CMSC, 498, A, Selected Topics in Computer Science, 1, Regular, Contact department for information to register for this course., , , , , 
CMSC, 498, X, Selected Topics in Computer Science; Introduction to Wireless Communications and Software-Defined Radio, 3, Regular, CMSC411 CMSC412 CMSC412 CMSC414 CMSC417 CMSC433 CMSC435 CMSC456, , , , , 
CMSC, 499, A, Independent Undergraduate Research, 1, Regular, Contact department for information to register for this course., , , , , 
CMSC, 624, , Database System Architecture and Implementation, 3, Regular* Audit, In-depth overview of database architectures--both the mainstream traditional architecture and more modern architectures that are especially prevalent in cloud implementations. Topics include different architectural choices for different application spaces and the tradeoffs inherent in choices and building different parts of database systems., CMSC424, , , CMSC624 CMSC828N , 
CMSC, 631, , Program Analysis and Understanding, 3, Regular* Audit, Techniques for static analysis of source code and modern programming paradigms. Analysis techniques: data flow analysis* program dependence graphs* program slicing* abstract interpretation. The meaning of programs: denotational semantics* partial evaluation. Advanced treatment of abstraction mechanisms: polymorphic types* operation overloading* inheritance* object-oriented programming and ML-like programming languages., CMSC330, , , , 
CMSC, 657, , Introduction to Quantum Information Processing, 3, Regular, An introduction to the field of quantum information processing. Students will be prepared to pursue further study in quantum computing* quantum information theory* and related areas., , , , CMSC657 CMSC858K , 
CMSC, 660, , Scientific Computing I, 3, Regular* Audit, Monte Carlo simulation* numerical linear algebra* nonlinear systems and continuation method* optimization* ordinary differential equations. Fundamental techniques in scientific computation with an introduction to the theory and software for each topic., CMSC466 AMSC466 AMSC460 CMSC460, , , AMSC660 CMSC660, 
CMSC, 663, , Advanced Scientific Computing I, 3, Regular, In the sequence CMSC663* CMSC664 students work on a year-long individual project to develop software for a scientific task in a high perfomance computing environment. Lectures will be given on available computational environments* code development* implementation of parallel algorithms., , , , AMSC663 CMSC663, 
CMSC, 666, , Numerical Analysis I, 3, Regular* Audit, Interpolation and approximation* numerical integration* solution algorithms for nonlinear systems of equations* numerical optimization., (CMSC466 AMSC466) AND MATH410, , , AMSC666 CMSC666, 
CMSC, 723, , Computational Linguistics I, 3, Regular* Audit, Fundamental methods in natural language processing. Topics include: finite-state methods* context-free and extended context-free models of syntax; parsing and semantics interpretation; n-gram and Hidden Markov models* part-of-speech tagging; natural language applications such as machine translation* automatic summarization* and question answering., CMSC421, , , CMSC723 LING723 INST735 , 
CMSC, 725, , Geographical Information Systems and Spatial Databases, 3, Regular* Audit, Topics in geographic information systems and spatial databases. Integrates related results from databases* cartography* geography* computer graphics* file access methods* computational geometry* image processing* data structures* and programming languages. Topics include: cartographic modeling* principles of cartography* methods from computational geometry* principles of spatial databases* access methods* and spatial data structures. The architecture of some existing spatial databases and geographic information systems will be examined in greater detail., CMSC424 AND CMSC420, , , , 
CMSC, 726, , Machine Learning, 3, Regular* Audit, An introduction to modern statistical data analysis using machine learning techniques. The course quickly surveys elementary statistical models (decision trees* nearest neighbors and linear regression) and moves on to more complex algorithms such as support vector machines* boosting* neural networks* structured prediction* apprenticeship learning* online learning* bandits* recommender systems and reinforcement learning. Throughout an emphasis is placed on mathematical rigor., CMSC421, , , , 
CMSC, 763, , Advanced Linear Numerical Analysis, 3, Regular* Audit, Advanced topics in numerical linear algebra* such as dense eigenvalue problems* sparse elimination* iterative methods* and other topics., (AMSC666 CMSC666), , , AMSC600 CMSC760 AMSC763 CMSC763 , 
CMSC, 798, , Graduate Seminar in Computer Science, 1, Regular, Contact department for information to register for this course., , , , , 
CMSC, 798, E, Graduate Seminar in Computer Science, 1, Regular, , , , , , 
CMSC, 799, , Master's Thesis Research, 1, Regular* Sat-Fail, Contact department for information to register for this course., , , , , 
CMSC, 818, E, Advanced Topics in Computer Systems; Distributed and Cloud-Based Storage Systems, 3, Regular* Audit, , , , , , 
CMSC, 818, O, Advanced Topics in Computer Systems; Computer and Network Security, 3, Regular* Audit, , , , , , 
CMSC, 818, W, Advanced Topics in Computer Systems; . Wireless and Mobile Systems for the IoT, 1, Regular* Audit, , , , , , 
CMSC, 828, C, Advanced Topics in Information Processing; Statistical Pattern Recognition, 3, Regular* Audit, , , , , , 
CMSC, 828, D, Advanced Topics in Information Processing; Interactive Data Analytics, 3, Regular* Audit, , , , , , 
CMSC, 828, I, Advanced Topics in Information Processing; Advanced Techniques in Visual Learning and Recognition, 3, Regular* Audit, ,  CMSC422 CMSC426, , , , 
CMSC, 828, O, Advanced Topics in Information Processing; Computational and Mathematical Analysis of Biological Networks across Scales, 3, Regular* Audit, , , , , , 
CMSC, 828, P, Advanced Topics in Information Processing; Algorithms and Machine Learning for Analyzing Mutations in Cancer, 3, Regular* Audit, , , , , , 
CMSC, 828, Q, Advanced Topics in Information Processing; Nature-Inspired Computing, 1, Regular* Audit, , , , , , 
CMSC, 828, X, Advanced Topics in Information Processing; Physically-based Modeling* Simulation* and Animation, 3, Regular* Audit, This course covers computational methods for modeling of motions in the physical and virtual world. We will discuss various considerations and trade offs used in designing simulation methodologies (e.g. time* space* robustness* and generality). These include data structures* algorithms* computational methods and simulation techniques* their complexity and implementation. The lectures will also cover some applications of physically-based modeling and simulation* such as Computer Animation* VR* Medical Simulation* Special Effects* Computer Games* Robotics* and Bioinformatics., , , , , 
CMSC, 838, X, Advanced Topics in Programming Languages; Personal Health Informatics & Visualization, 3, Regular* Audit, Also offered as CMSC838X. Credit only granted for INST682 or CMSC838X., , , , , 
CMSC, 858, C, Advanced Topics in Theory of Computing; Randomized Algorithms, 1, Regular* Audit, , , , , , 
CMSC, 898, , Pre-Candidacy Research, 1, Regular* Sat-Fail, Contact department for information to register for this course., , , , , 
CMSC, 899, , Doctoral Dissertation Research, 6, Regular* Sat-Fail, Contact department for information to register for this course., , , , , 
